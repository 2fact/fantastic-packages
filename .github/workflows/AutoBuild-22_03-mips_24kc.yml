###########################################################
#   Description: Compile OpenWrt by GitHub Actions        #
#   Based on: https://github.com/P3TERX/Actions-OpenWrt   #
#   Author: muink                                         #
###########################################################

name: 22_03-mips_24kc

### 以下内容请保持不变 ( 请修改下方的 [环境变量设置] )
on:
  repository_dispatch:
  workflow_dispatch:
### 控制部分结束 ( 以上内容请保持不变 )

  push:
    branches: [ master ]
    paths:
    - 'Makefile'

  #schedule:
  #  - cron: 0 8 * * 5

  watch:
    types: [started]

### 环境变量设置
env:
# 编译版本信息参数
  VERSIONS: '22.03.2'
  TARGET: 'ath79/nand'
  ARCH: 'mips_24kc'
# 使用 GPG 签名 Packages (非必要)
  GPG_SIGN: true
# Pre-download Libraries
  PRE_DOWNLOAD: false
# 删除无用文件以增加编译空间
  DELETE_USELESS_FILES: true
# 删除早期的 workflow 任务
  DELETE_OLD_WORKFLOW: true
# Secret keys
  USIGN_ID: '53FF2B6672243D28'
  USIGN_KEY: ${{secrets.USIGN_53FF2B6672243D28}}
  GPG_ID: 'A5F2461EC8F6DCAA'
  GPG_PW: ${{secrets.GPG_PW_A5F2461EC8F6DCAA}}
  GPG_KEY: ${{secrets.GPG_A5F2461EC8F6DCAA}}
### 结束

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  compile:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # To push a branch
      # pull-requests: write  # To create a PR from that branch
      actions: write

    steps:
    - name: Maximize Build Space
      if: env.DELETE_USELESS_FILES == 'true' && !cancelled()
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 5120
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'

    - name: Initialize Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get update
        sudo -E apt-get -y install curl tar gzip bash gpg build-essential clang flex bison g++ gawk gcc-multilib gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget libncursesw5-dev xsltproc python3
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        if [ "${{ env.DELETE_USELESS_FILES }}" == true ]
        then
            docker rmi $(docker images -q)
            sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php
            sudo -E apt-get -y autoremove --purge
            sudo -E apt-get clean
        fi

    - name: Checkout
      uses: actions/checkout@v3
      with:
        lfs: true
        submodules: true

    - name: Initialize OpenWRT SDK
      shell: bash
      run: |
        mkdir -p "/workdir/DL"
        sdk=$(curl --connect-timeout 10 --retry 3 -sSL https://downloads.openwrt.org/releases/$VERSIONS/targets/$TARGET | grep 'openwrt-sdk' | sed -En 's|.+\bhref="([^"]+)".+|\1|p')
        curl --connect-timeout 10 --retry 3 -sSL -o "/workdir/$sdk" https://downloads.openwrt.org/releases/$VERSIONS/targets/$TARGET/$sdk
        [ "$?" == 0 ] && {
          tar -C "/workdir" -xf "/workdir/$sdk"
          rm -f "/workdir/$sdk"
          mv "/workdir/${sdk%.tar.*}" "/workdir/$VERSIONS"
          pushd "/workdir/$VERSIONS" && umask 022
          pushd "/workdir/$VERSIONS/package" && umask 022
          ln -s "$GITHUB_WORKSPACE" "fantastic-packages"
          popd
          rm -rf dl 2>/dev/null
          ln -s "/workdir/DL" dl
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          make defconfig
          popd
        }

    - name: Pre-download Libraries
      shell: bash
      if: env.PRE_DOWNLOAD == 'true' && !cancelled()
      run: |
        [ -d "/workdir/$VERSIONS" ] && {
          pushd "/workdir/$VERSIONS"
          make download -j$(($(nproc)+1))
          popd
        }

    - name: Build Packages
      shell: bash
      run: |
        [ -d "/workdir/$VERSIONS" ] && {
          pushd "/workdir/$VERSIONS"
          make package/fantastic-packages/compile V=99
          popd
        }

    - name: Checkout Packages
      shell: bash
      run: |
        export PATH="$PATH:/workdir/$VERSIONS/staging_dir/host/bin"
        sudo chmod -R +x "/workdir/$VERSIONS/staging_dir/host/bin/"
        export MKHASH="/workdir/$VERSIONS/staging_dir/host/bin/mkhash"
        sudo chmod +x "/workdir/$VERSIONS/scripts/ipkg-make-index.sh"
        #
        eval $(cat $GITHUB_WORKSPACE/Makefile|sed -En '/^\s*DEPENDS/,/^endef/{/^\s*(DEPENDS:=|\+)/p}'|tr '\n' ' '|sed -E "s|[:+\\]||g;s|\bluci-app-|luci-*-|g;s|\s+| |g;s|=|='|;s|\s*$|'|")
        REGEXP=$(echo $DEPENDS|sed 's| |*.ipk -or -name |g;s|^|-name |;s|$|*.ipk|')
        mkdir -p "$GITHUB_WORKSPACE/releases" 2>/dev/null
        if [ -d "/workdir/$VERSIONS" ]; then
          rm -rf   "$GITHUB_WORKSPACE/releases/${VERSIONS%.*}/packages/$ARCH/packages" 2>/dev/null
          mkdir -p "$GITHUB_WORKSPACE/releases/${VERSIONS%.*}/packages/$ARCH/packages" 2>/dev/null
          eval $(find "/workdir/$VERSIONS/bin/packages/$ARCH/" -type f $REGEXP | sed -E 's|^(.+)$|mv -f "\1" "$GITHUB_WORKSPACE/releases/${VERSIONS%.*}/packages/$ARCH/packages/"; |g;s|\$|\$|g')
          pushd "$GITHUB_WORKSPACE/releases/${VERSIONS%.*}/packages/$ARCH/packages"
          # ref: SDK/package/Makefile:index:
          "/workdir/$VERSIONS/scripts/ipkg-make-index.sh" . 2>&1 > Packages.manifest
          grep -vE '^(Maintainer|LicenseFiles|Source|SourceName|Require|SourceDateEpoch)' Packages.manifest > Packages
          case "$(((64 + $(stat -L -c%s Packages)) % 128))" in 110|111)
            # WARNING: Applying padding in $$d/Packages to workaround usign SHA-512 bug!
            { echo ""; echo ""; } >> Packages;;
          esac
          gzip -9nc Packages > Packages.gz
          # ref: SDK/package/Makefile:CONFIG_SIGNED_PACKAGES
          usign -S -m Packages -s <(echo "${USIGN_KEY}")
        pushd "$GITHUB_WORKSPACE/releases/${VERSIONS%.*}"
        cp -f "$GITHUB_WORKSPACE/keys/usign/${USIGN_ID}.pub" ${USIGN_ID}.pub
        USIGN_PUBKEY="$(cat ${USIGN_ID}.pub)"
        cat <<- EOF > ${USIGN_ID}.sh
        #!/bin/sh
        KEYID=${USIGN_ID}
        mkdir -p /etc/opkg/keys 2>/dev/null
        cat <<- PUBKEY > /etc/opkg/keys/\${KEYID,,}
        ${USIGN_PUBKEY}
        PUBKEY
        EOF
        popd
          if [ "${{env.GPG_SIGN}}" == true ]; then
            gpg --batch --pinentry-mode=loopback --yes --passphrase "$(echo -n "${GPG_PW}")" --import <(echo "${GPG_KEY}")
            echo "$(sed 's|\s||g' "$GITHUB_WORKSPACE/keys/gpg/${GPG_ID}.finger"):6:" | gpg --import-ownertrust
            gpg -u ${GPG_ID} --batch --pinentry-mode=loopback --yes --passphrase "$(echo -n "${GPG_PW}")" -a -o Packages.asc --detach-sign Packages
            pushd "$GITHUB_WORKSPACE/releases/${VERSIONS%.*}"
            cp -f "$GITHUB_WORKSPACE/keys/gpg/${GPG_ID}.finger" ${GPG_ID}.gpg.finger
            cp -f "$GITHUB_WORKSPACE/keys/gpg/${GPG_ID}.pub" ${GPG_ID}.gpg.pub
            cp -f "$GITHUB_WORKSPACE/keys/gpg/${GPG_ID}.rev" ${GPG_ID}.gpg.rev
            popd
          fi
          popd
        fi

    - name: Initialize OpenWRT ImageBuilder
      shell: bash
      run: |
        imgbd=$(curl --connect-timeout 10 --retry 3 -sSL https://downloads.openwrt.org/releases/$VERSIONS/targets/$TARGET | grep 'openwrt-imagebuilder' | sed -En 's|.+\bhref="([^"]+)".+|\1|p')
        curl --connect-timeout 10 --retry 3 -sSL -o "/workdir/$imgbd" https://downloads.openwrt.org/releases/$VERSIONS/targets/$TARGET/$imgbd
        [ "$?" == 0 ] && {
          tar -C "/workdir" -xf "/workdir/$imgbd"
          rm -f "/workdir/$imgbd"
          mv "/workdir/${imgbd%.tar.*}" "/workdir/imagebuilder"
        }

    - name: Build Images
      env:
        ROOTFS_SIZE: 256
      shell: bash
      run: |
        [ -d "/workdir/imagebuilder" ] && {
          pushd "/workdir/imagebuilder"
          sed -i "s|\(\bCONFIG_TARGET_ROOTFS_PARTSIZE\)=.*|\1=${ROOTFS_SIZE}|" .config
          eval $(find "$GITHUB_WORKSPACE/releases/${VERSIONS%.*}/packages/$ARCH/" -type f -name *.ipk | sed -E 's|^(.+)$|cp -f "\1" packages/; |g;s|\$|\$|g')
          make image PACKAGES="$(echo $(cat "$GITHUB_WORKSPACE/.github/workflows/prebuildpackages/$ARCH"))"
          popd
        }

    - name: Checkout Images
      shell: bash
      run: |
        export PATH="$PATH:/workdir/$VERSIONS/staging_dir/host/bin"
        sudo chmod -R +x "/workdir/$VERSIONS/staging_dir/host/bin/"
        export MKHASH="/workdir/$VERSIONS/staging_dir/host/bin/mkhash"
        sudo chmod +x "/workdir/$VERSIONS/scripts/ipkg-make-index.sh"
        #
        if [ -d "/workdir/imagebuilder" ]; then
          rm -rf   "$GITHUB_WORKSPACE/releases/${VERSIONS%.*}/targets/$TARGET" 2>/dev/null
          mkdir -p "$GITHUB_WORKSPACE/releases/${VERSIONS%.*}/targets/$TARGET" 2>/dev/null
          mv "/workdir/imagebuilder/bin/targets/$TARGET/"* "$GITHUB_WORKSPACE/releases/${VERSIONS%.*}/targets/$TARGET/"
          pushd "$GITHUB_WORKSPACE/releases/${VERSIONS%.*}/targets/$TARGET"
          usign -S -m sha256sums -s <(echo "${USIGN_KEY}")
          if [ "${{env.GPG_SIGN}}" == true ]; then
            gpg --batch --pinentry-mode=loopback --yes --passphrase "$(echo -n "${GPG_PW}")" --import <(echo "${GPG_KEY}")
            echo "$(sed 's|\s||g' "$GITHUB_WORKSPACE/keys/gpg/${GPG_ID}.finger"):6:" | gpg --import-ownertrust
            gpg -u ${GPG_ID} --batch --pinentry-mode=loopback --yes --passphrase "$(echo -n "${GPG_PW}")" -a -o sha256sums.asc --detach-sign sha256sums
          fi
          popd
        fi

    - name: Commit and push
      env:
        Branch: gh-pages
      run: |
        git config --local user.name "GitHub Action"
        git config --local user.email "actions-user@users.noreply.github.com"
        git remote update
        git fetch --no-tags --prune --no-recurse-submodules --depth=1 origin $Branch
        git checkout -B $Branch refs/remotes/origin/$Branch
        git add releases/
        git diff-index --cached --quiet HEAD releases/${VERSIONS%.*}/packages/$ARCH/packages/*.ipk && \
        git diff-index --cached --quiet HEAD releases/${VERSIONS%.*}/targets/$TARGET/sha256sums || (git commit -m "Update $ARCH" && git push)

    - name: Delete old Workflow Runs
      uses: GitRML/delete-workflow-runs@main
      if: env.DELETE_OLD_WORKFLOW == 'true' && !cancelled()
      with:
        retain_days: 1
        keep_minimum_runs: 3
